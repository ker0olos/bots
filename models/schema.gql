type User @collection(name: "user") {
  # discord user id
  id: String!
  # all the inventories this user owns
  inventories: [Inventory!]!
  # all the badges this user owns
  badges: [Badge!]!
  # 
  lastVote: Time,
  # the amount of votes the user has voted
  totalVotes: Int
  # the amount of votes available to be exchanged for rewards
  availableVotes: Int
}

type Guild @collection(name: "guild") {
  # discord guild id
  id: String!
  # servers can have multiple sandboxed instances
  instances: [Instance!]!
}

type Instance @collection(name: "instance") {
  # the main/default instance
  main: Boolean!
  # each user has an inventory
  inventories: [Inventory!]!
  # the guild where the instance resides
  guild: Guild!
  # community packs installed on the instance 
  packs: [Pack!]!
}

type Inventory @collection(name: "inventory") {
  # the amount of pulls available to the user
  availablePulls: Int!
  #
  rechargeTimestamp: Time
  # the time the user last pulled a gacha
  lastPull: Time
  # the party linked to this user's inventory
  party: Party
  # all the characters this user owns
  characters: [Character!]!
  # the instance that contains this user's inventory
  instance: Instance!
  # the user that owns this inventory
  user: User!
}

type Character @collection(name: "character") {
  # the character pack-id:id
  id: String!
  # the media pack-id:id
  mediaId: String!
  # the rating of the character
  rating: Int!
  # a custom image 
  nickname: String
  # a custom image url
  image: String
  # all the ownership transitions of the character
  history: [History!]!
  # the instance that contains this character
  instance: Instance!
  # the inventory where this character is currently
  inventory: Inventory!
  # the user that owns this character currently
  user: User!
}

type Pack @collection(name: "pack") {
  # github repo id
  id: Int!
  # all the instances where this pack is installed
  instances: [Instance!]!
  # the pack's manifest
  manifest: Manifest!
  # the user who installed this pack
  installedBy: User!
  # the first time the pack was installed on an instance
  firstInstall: Time!
  # the last time the pack was installed on an instance
  lastInstall: Time!
}

type Badge @collection(name: "badge") {
  # the name of the badge
  name: String!
  # short description of the badge
  description: String!
  # the emote representing the badge
  emote: String! 
  # all users who own this badge
  users: [User!]!
}

type History @embedded {
  gacha: Gacha
  trade: Trade
}

type Gacha @embedded {
  by: User!
  pool: Int!
  popularityChance: Int!
  popularityGreater: Int!
  popularityLesser: Int
  roleChance: Int
  role: String
}

type Trade @embedded {
  from: User!
  to: User!
}

type Party @embedded {
  member1: Character
  member2: Character
  member3: Character
  member4: Character
  member5: Character
}
